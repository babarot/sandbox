name: Windows Wildcard Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test-windows:
    runs-on: windows-latest

    steps:
    - name: Show environment info
      shell: pwsh
      run: |
        Write-Host "User Directory: $env:USERPROFILE"
        Write-Host "Home Directory: $env:HOMEDRIVE$env:HOMEPATH"
        Write-Host "Current Directory: $PWD"
        Write-Host "`nDirectory contents of User Directory:"
        Get-ChildItem $env:USERPROFILE
        Write-Host "`nWorking directory contents:"
        Get-ChildItem

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Git clone and build
      shell: pwsh
      run: |
        # Clone and build in a temporary location
        git clone https://github.com/babarot/gomi.git "$env:USERPROFILE\gomi_temp"
        cd "$env:USERPROFILE\gomi_temp"
        go build -o app.exe

        # Move back to workspace and create test directory
        cd D:\a\sandbox\sandbox
        New-Item -ItemType Directory -Force -Path testfiles

        # Move executable to test directory
        Move-Item "$env:USERPROFILE\gomi_temp\app.exe" "testfiles\app.exe"

        # Clean up temporary directory
        Remove-Item -Recurse -Force "$env:USERPROFILE\gomi_temp"

    - name: Create test files
      shell: pwsh
      run: |
        cd D:\a\sandbox\sandbox\testfiles
        "test" | Out-File -FilePath file1.txt
        "test" | Out-File -FilePath file2.txt
        "test" | Out-File -FilePath file3.txt
        "test" | Out-File -FilePath testa.txt
        "test" | Out-File -FilePath testb.txt
        "test" | Out-File -FilePath testc.txt
        "test" | Out-File -FilePath test.dat
        "test" | Out-File -FilePath test.log
        Write-Host "`nTest directory contents:"
        Get-ChildItem

    - name: Test wildcards
      shell: pwsh
      run: |
        cd D:\a\sandbox\sandbox\testfiles
        Write-Host "`nCurrent working directory:"
        $PWD

        Write-Host "`nTesting with pattern: *.txt"
        .\app.exe *.txt
        Write-Host "`nDirectory contents after *.txt:"
        Get-ChildItem

        Write-Host "`nTesting with pattern: test[!0-9].txt"
        .\app.exe test[!0-9].txt
        Write-Host "`nDirectory contents after test[!0-9].txt:"
        Get-ChildItem

        Write-Host "`nTesting with pattern: file?.txt"
        .\app.exe file?.txt
        Write-Host "`nDirectory contents after file?.txt:"
        Get-ChildItem

        Write-Host "`nContents of .gomi directory:"
        if (Test-Path "$env:USERPROFILE\.gomi") {
            Get-ChildItem "$env:USERPROFILE\.gomi" -Force
        } else {
            Write-Host ".gomi directory does not exist"
        }
